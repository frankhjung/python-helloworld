---

#default:
#  tags:
#    - build-runner

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    # if already in a merge request pipeline then don't add to branch pipeline
    - if: $CI_OPEN_MERGE_REQUESTS
      when: never
    # if no open merge request then add to branch pipeline
    - if: $CI_COMMIT_BRANCH

stages:
  - validate
  - deploy

validate:
  image: python:3.13-slim
  stage: validate
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    PROJECT: "helloworld"
  except:
    - tags
  before_script:
    - python --version
    - pip install virtualenv
    - virtualenv --version
    - virtualenv .venv
    - source .venv/bin/activate
    - pip install --upgrade --requirement requirements.txt
    - pip --version
    - pip list --local
  script:
    # check formatting
    - ruff format --check
    - sort-requirements --check requirements.txt
    # check linting
    - ruff check --output-format gitlab --output-file public/ruff-report.json
    # unit tests and code coverage
    - pytest --junitxml=public/pytest_report.xml
      --html=public/pytest_report.html --self-contained-html
      --cov --cov-report=xml --cov-report=html:public/coverage
    # generate badges
    - genbadge tests
      --input-file public/pytest_report.xml
      --output-file public/tests.svg
    # create pydocs (see make for sphinx)
    - pdoc $PROJECT !$PROJECT.tests --output-directory public
    # run program
    - python -m $PROJECT
    - python -m $PROJECT --version
    - python -m $PROJECT --log DEBUG
  # regex to the get coverage percentage from pytest (used for badge)
  coverage: /(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/
  artifacts:
    paths:
      - public
    reports:
      junit: public/pytest_report.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - .cache/pip
      - .venv

pages:
  image: alpine
  stage: deploy
  rules:
    # if protected ref then deploy automatically otherwise deploy manually
    - if: $CI_COMMIT_REF_PROTECTED == "true"
    - when: manual
  script:
    - echo Deploying pages ...
  artifacts:
    paths:
      - public
